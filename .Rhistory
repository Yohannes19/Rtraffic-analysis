View(vehInv)
perform_vehicledInvolved(accidents2017)
document()
library(sf)
vehicles_involved<-perform_vehicledInvolved(accidents2017)
# Create the bar plot of the number of car accidents according to the number of vehicles involved
p <- ggplot(vehicles_involved, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
install.packages("testthat")
install.packages("testthat")
testthat::test_check()
testthat::test_check("TrafficAnalysis")
devtools::test()
devtools::load_all(".")
perform_rateofinjury_bydayofweek(accidents2017)
library(devtools)
document()
document()
library(sf)
vehicles_involved<-perform_vehicledInvolved(accidents2017)
# Create the bar plot of the number of car accidents according to the number of vehicles involved
p <- ggplot(vehicles_involved, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Set the figure size
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
document()
library(sf)
vehicles_involved<-perform_vehicledInvolved(accidents2017)
# Create the bar plot of the number of car accidents according to the number of vehicles involved
p <- ggplot(vehicles_involved, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Set the figure size
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
document()
library(sf)
perform_vehicledInvolved(accidents2017)
st_crs(accidents2017)
st_set_crs(accidents2017,4326)
library(sf)
perform_vehicledInvolved(accidents2017)
st_crs(accidents_data)
st_crs(accidents2017)
document()
library(sf)
perform_vehicledInvolved(accidents2017)
perform_vehicledInvolved(accidents2017)
document()
perform_vehicledInvolved(accidents2017)
document()
perform_vehicledInvolved(accidents2017)
library(sf)
accidents2017<-st_drop_geometry(accidents2017)
perform_vehicledInvolved(accidents2017)
document()
library(sf)
accidents2017<-st_drop_geometry(accidents2017)
vehicles_involved<-perform_vehicledInvolved(accidents2017)
# Create the bar plot of the number of car accidents according to the number of vehicles involved
p <- ggplot(vehicles_involved, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Set the figure size
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
document()
library(sf)
accidents2017<-st_drop_geometry(accidents2017)
vehicles_involved<-perform_vehicledInvolved(accidents2017)
# Create the bar plot of the number of car accidents according to the number of vehicles involved
p <- ggplot(vehicles_involved, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Set the figure size
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
document()
library(sf)
accidents2017<-st_drop_geometry(accidents2017)
vehicles_involved<-perform_vehicledInvolved(accidents2017)
# Create the bar plot of the number of car accidents according to the number of vehicles involved
p <- ggplot(vehicles_involved, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Set the figure size
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
vehicles_involved<-perform_vehicledInvolved(accidents2017)
library(sf)
accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
# Create the bar plot of the number of car accidents according to the number of vehicles involved
p <- ggplot(vehicles_invol, aes(x = as.factor(Vehicles.invol), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
library(sf)
accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
# Create the bar plot of the number of car accidents according to the number of vehicles involved
p <- ggplot(vehicles_invol, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
print(typeof(vehicles_invol))
# Create the bar plot of the number of car accidents according to the number of vehicles involved
p <- ggplot(vehicles_invol, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
vehicles_invol<-do.call(data.frame,vehicles_invol)
# Create the bar plot of the number of car accidents according to the number of vehicles involved
p <- ggplot(vehicles_invol, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
#vehicles_invol<-do.call(data.frame,vehicles_invol)
# Create the bar plot of the number of car accidents according to the number of vehicles involved
p <- ggplot(vehicles_invol, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
#accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(st_drop_geometry(accidents2017))
#vehicles_invol<-do.call(data.frame,vehicles_invol)
p <- ggplot(vehicles_invol, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
#accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
p <- ggplot(vehicles_invol, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
#accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
vehicles_invol<-st_drop_geometry(vehicles_invol)
p <- ggplot(vehicles_invol, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
document()
#accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
p <- ggplot(vehicles_invol, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
#accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
st_crs(accidents2017)
p <- ggplot(vehicles_invol, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
#accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
st_transform(accidents2017,4326)
#accidents2017<-st_drop_geometry(accidents2017)
st_set_crs(accidents2017,4326)
#accidents2017<-st_drop_geometry(accidents2017)
accidents2017<-st_set_crs(accidents2017,4326)
#accidents2017<-st_drop_geometry(accidents2017)
accidents2017 <- st_set_crs(accidents2017, crs = "EPSG:4326")
#accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
set_crs(accidents2017)
#accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
st_crs(accidents2017)
p <- ggplot(vehicles_invol, aes(x = as.factor(Vehicles.involved), y = num_accidents)) +
geom_bar(stat = "identity", fill = "darkblue", alpha = 0.5) +
geom_text(aes(label = num_accidents), vjust = -0.5, size = 4) +
labs(title = "Accidents in Barcelona in 2017",
x = "Vehicles involved",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
st_crs(accidents2017)
view(accidents2017)
load("D:/R/TrafficAnalysis/data/accidents2017.rda")
View(accidents2017)
st_crs(accidents2017)
#accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
document()
#accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
#accidents2017<-st_drop_geometry(accidents2017)
vehicles_invol<-perform_vehicledInvolved(accidents2017)
view(accidents2017)
visualize_high_vehicle_areas(accidents2017,5)
document()
visualize_high_vehicle_areas(accidents2017,5)
document()
visualize_high_vehicle_areas(accidents2017,5)
library(leaflet)
visualize_high_vehicle_areas(accidents2017,5)
visualize_high_vehicle_areas(accidents2017,10)
document()
document()
perform_rateofinjury_bydayofweek(accidents2017)
visualize_high_vehicle_involved_areas(accidents2017,10)
visualize_high_vehicle_involved_areas(accidents2017,10)
document()
highVich<-visualize_high_vehicle_involved_areas(accidents2017,10)
highVich
Display_allaccidentdata(accidents2017)
devtools::load_all(".")
?visualize_high_vehicle_involved_areas()
?visualize_high_vehicle_involved_areas
library(devtools)
document()
?perform_high_vehicle_involved_areas()
?perform_high_vehicle_involved_areas
document()
?perform_high_vehicle_involved_areas()
?perform_high_vehicle_involved_areas
document()
perform_high_vehicle_involved_areas()
perform_high_vehicle_involved_areas(accidents2017,5)
library(leaflet)
perform_high_vehicle_involved_areas(accidents2017,5)
?perform_high_vehicle_involved_areas
document()
?perform_high_vehicle_involved_areas
document()
?perform_high_vehicle_involved_areas
?perform_high_vehicle_involved_areas()
Display_AnimatedHeatMap(accidents2017)
library(ggtext)
Display_AnimatedHeatMap(accidents2017)
library(TrafficAnalysis)
Display_AnimatedHeatMap(accidents2017)
library(gganimate)
Display_AnimatedHeatMap(accidents2017)
library(sf)
Display_AnimatedHeatMap(accidents2017)
#to display the animated heatmap for the
library(gifski)
library(gganimate)
library(ggtext)
#animation::use_renderer(gifski_renderer())
animated_heatmap<-Display_AnimatedHeatMap(accidents2017)
anim_save("heatmap_animation.gif", animation = animated_heatmap,
ani.width = 800, ani.height = 600,
title = "Accidents Heatmap Animation")
#my_options <- list(ani.width = 800, ani.height = 600)
knitr::include_graphics("heatmap_animation.gif")
?Display_AnimatedHeatMap()
?Display_AnimatedHeatMap
analysis_result<-perform_monthly_analysis(accidents2017)
#print(analysis_result$plot)
analysis_result
analysis_result<-perform_monthly_analysis(accidents2017)
#print(analysis_result$plot)
document()
perform_monthly_analysis(accidents2017)
#print(analysis_result$plot)
document()
analysis_result<-perform_monthly_analysis(accidents2017)
#print(analysis_result$plot)
p <- ggplot(analysis_result, aes(month,num_accidents)) +
geom_bar(stat = "identity", fill = "blue", alpha = 0.5,position="identity") +
labs(title = "Accidents in Barcelona in 2017",
x = "Month",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
perform_monthly_analysis(accidents2017)
document()
perform_monthly_analysis(accidents2017)
document()
data<-perform_weekdays_analysis(accidents2017)
p <- ggplot(data, aes(x = day_of_week, y = num_accidents)) +
geom_bar(stat = "identity", fill = "magenta", alpha = 0.5) +
labs(title = "Accidents in Barcelona in 2017",
x = "Day of the week",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
document()
perform_weekdays_analysis(accidents2017)
data<-perform_weekdays_analysis(accidents2017)
p <- ggplot(data, aes(x = day_of_week, y = num_accidents)) +
geom_bar(stat = "identity", fill = "magenta", alpha = 0.5) +
labs(title = "Accidents in Barcelona in 2017",
x = "Day of the week",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Set the figure size
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
document()
data<-perform_weekdays_analysis(accidents2017)
ggplot(data, aes(x = day_of_week, y = num_accidents)) +
geom_bar(stat = "identity", fill = "magenta", alpha = 0.5) +
labs(title = "Accidents in Barcelona in 2017",
x = "Day of the week",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data<-perform_weekdays_analysis(accidents2017)
p <- ggplot(data, aes(x = day_of_week, y = num_accidents)) +
geom_bar(stat = "identity", fill = "magenta", alpha = 0.5) +
labs(title = "Accidents in Barcelona in 2017",
x = "Day of the week",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
perform_monthly_analysis(accidents2017)
#p
document()
data<-perform_weekdays_analysis(accidents2017)
p <- ggplot(data, aes(x = day_of_week, y = num_accidents)) +
geom_bar(stat = "identity", fill = "magenta", alpha = 0.5) +
labs(title = "Accidents in Barcelona in 2017",
x = "Day of the week",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Set the figure size
options(repr.plot.width = 12, repr.plot.height = 7)
print(p)
data<-perform_weekdays_analysis(accidents2017)
ggplot(data, aes(x = day_of_week, y = num_accidents)) +
geom_bar(stat = "identity", fill = "magenta", alpha = 0.5) +
labs(title = "Accidents in Barcelona in 2017",
x = "Day of the week",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Set the figure size
options(repr.plot.width = 12, repr.plot.height = 7)
#  print(p)
document()
#
accidents_data <-perform_eachday_year(accidents2017)
p <- ggplot(accidents_data, aes(x = date, y = num_accidents)) +
geom_line(color = "blue") +
geom_point(data = filter(accidents_data, weekdays(date) == "Sunday"), aes(color = "Sunday", shape = "Sunday"), size = 3, show.legend = TRUE) +
geom_point(data = filter(accidents_data, weekdays(date) == "Friday"), aes(color = "Friday", shape = "Friday"), size = 3, show.legend = TRUE) +
labs(title = "Accidents in Barcelona in 2017",
x = "Date",
y = "Number of accidents per day",
color = "Day of the Week",
shape = "Day of the Week") +
scale_color_manual(values = c("Sunday" = "green", "Friday" = "red")) +
scale_shape_manual(values = c("Sunday" = 16, "Friday" = 17)) +
theme_minimal()
# Set the figure size
# options(repr.plot.width = 13, repr.plot.height = 8)
# Print the plot
print(p)
document()
data<-perform_weekdays_analysis(accidents2017)
ggplot(data, aes(x = day_of_week, y = num_accidents)) +
geom_bar(stat = "identity", fill = "magenta", alpha = 0.5) +
labs(title = "Accidents in Barcelona in 2017",
x = "Day of the week",
y = "Number of accidents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Set the figure size
options(repr.plot.width = 12, repr.plot.height = 7)
#  print(p)
highVich<-visualize_high_vehicle_involved_areas(accidents2017,10)
highVich<-perform_high_vehicle_involved_areas(accidents2017,10)
highVich
highVich<-perform_high_vehicle_involved_areas(accidents2017,10)
highVich
document()
highVich<-perform_high_vehicle_involved_areas(accidents2017,10)
highVich
document()
highVich<-perform_high_vehicleinvolved_areas(accidents2017,10)
highVich
gc()
devtools::load_all(".")
library(devtools)
document()
library(sf)
library(leaflet)
highVich<-perform_high_vehicleinvolvedareas(accidents2017,10)
highVich
perform_high_vehicleinvolvedareas(accidents2017,10)
find(perform_high_vehicleinvolvedareas())
find(perform_high_vehicleinvolvedareas)
perform_high_vehicleinvolvedareas(accidents2017,10)
?perform_eachday_year
?perform_high_vehicleinvolvedareas
#loading the necessary libraries
library(TrafficAnalysis)
library(sf)
library(leaflet)
library(tidyverse)
library(gganimate)
library(gifski)
library(ggtext)
library(mapview)
document()
library(TrafficAnalysis)
perform_high_vehicleinvolvedareas(accidents2017,10)
?perform_high_vehicleinvolvedareas
perform_high_vehicleinvolvedareas( accidents2017,6)
library(leaflet)
perform_high_vehicleinvolvedareas(accidents2017,10)
library(mapview)
